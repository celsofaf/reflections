How did viewing a diff between two versions of a file help you see the bug that
was introduced?

>> Diff shows lines that were created or deleted, and lines with different content. By concentrating on viewing the differences between the files, it gets easier and quicker to locate where a bug is located.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

>> When a mistake is made, I can just roll back. ;-)


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

>> Pros: avoids clutter, uses less storage. Cons: more prone to human error.


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

>> Because multiple files operate together inside a project.


How can you use the commands git log and git diff to view the history of files?

>> git log: shows each individual commit on the repository, with message and id. git diff: shows the differences between two commits.


How might using version control make you more confident to make changes that
could break something?

>> If anything goes wrong, I can search for any mistakes and it gets easier to fix.


Now that you have your workspace set up, what do you want to try using Git for?

>> Learning!
